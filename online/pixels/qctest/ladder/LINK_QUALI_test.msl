# Author J. Guzman-Funck, March 2022, Cosmic Run. jose.guzman-funck19@imperial.ac.uk || pepe.guzmanfunck@gmail.com
#
# Script to perform the Link Quality test
#
#
#

# Process input parameters
PARAM half_ladder_id, "Half ladder ID"
PARAM hameg_id, "HAMEG ID"
PARAM channel, "HAMEG Channel"



# Checks for inconsistencies in given half_ladder_id

#ODBGET /Equipment/PixelsCentral/QCTests/Ladder/half_ladder_id, _g_ladder_id
#IF $_g_ladder_id != half_ladder_id
#    MESSAGE "Input half_ladder_id at Link Quality Test different than the one inputed in IV curve test", 0
#ENDIF

#ODBGET /Equipment/PixelsCentral/QCTests/Ladder/half_ladder_id, _g_hameg_id
#IF $_g_hameg_id != hameg_id
#    MESSAGE "Input hameg_id at Link Quality Test different than the one inputed in IV curve test", 0
#ENDIF

#ODBGET /Equipment/PixelsCentral/QCTests/Ladder/half_ladder_id, _g_channel
#IF $_g_channel != channel
#    MESSAGE "Input channel at Link Quality Test different than the one inputed in IV curve test", 0
#ENDIF


ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/half_ladder_id, $half_ladder_id
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/hameg_id, $hameg_id
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/channel, $channel


CAT power_get_state_path, /Equipment/HAMEG, $hameg_id, /Variables/State[, $channel, ]
CAT power_set_state_path, /Equipment/HAMEG, $hameg_id, /Variables/Set State[, $channel, ]


PARAM hv_voltage, "HV voltage"
PARAM hv_curr_limit, "HV current limit"
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Input/HV_voltage, $hv_voltage
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Input/HV_curr_limit, $hv_curr_limit

# Definitions
start_magic_value = 11
stop_magic_value = 13

waiting_time = 5

# Save parameters to ODB
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Input/start_magic_value_VPVCO, $start_magic_value
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Input/stop_magic_value_VPVCO, $stop_magic_value
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Input/waiting_time, $waiting_time

#Reset output
ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/*/Scan/VPVCO[*], 0
ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/*/Scan/error_rate[*], 0
ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/*/Scan/error_rate_linkA[*], 0
ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/*/Scan/error_rate_linkB[*], 0
ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/*/Scan/error_rate_linkC[*], 0


# Power settings?
# - LV: on
ODBGET $power_get_state_path, now_state_hameg_channel
IF $now_state_hameg_channel == 0
    ODBSET $power_set_state_path, 1
    WAIT SECONDS, 10
ENDIF

# - HV: specify at the begnning as params
ODBSET /Equipment/KEITHLEY0/Variables/Current Limit, $hv_curr_limit
ODBSET /Equipment/KEITHLEY0/Variables/Demand Voltage, -1*abs($hv_voltage)
ODBSET /Equipment/KEITHLEY0/Variables/Set State, 1
WAIT SECONDS, 2

# ID of each mupix. TODO correct
mupixID0 = 0 + ($half_ladder_id % 4)*3
mupixID1 = 1 + ($half_ladder_id % 4)*3
mupixID2 = 2 + ($half_ladder_id % 4)*3

CAT chip0_linkA, Equipment/PixelsCentral/Variables/PCLS[, 1 + 21*$mupixID0 + 1, ]
CAT chip0_linkB, Equipment/PixelsCentral/Variables/PCLS[, 1 + 21*$mupixID0 + 8, ]
CAT chip0_linkC, Equipment/PixelsCentral/Variables/PCLS[, 1 + 21*$mupixID0 + 15, ]
CAT chip1_linkA, Equipment/PixelsCentral/Variables/PCLS[, 1 + 21*$mupixID1 + 1, ]
CAT chip1_linkB, Equipment/PixelsCentral/Variables/PCLS[, 1 + 21*$mupixID1 + 8, ]
CAT chip1_linkC, Equipment/PixelsCentral/Variables/PCLS[, 1 + 21*$mupixID1 + 15, ]
CAT chip2_linkA, Equipment/PixelsCentral/Variables/PCLS[, 1 + 21*$mupixID2 + 1, ]
CAT chip2_linkB, Equipment/PixelsCentral/Variables/PCLS[, 1 + 21*$mupixID2 + 8, ]
CAT chip2_linkC, Equipment/PixelsCentral/Variables/PCLS[, 1 + 21*$mupixID2 + 15, ]

globalMupixID0 = $half_ladder_id*3 + 0
globalMupixID1 = $half_ladder_id*3 + 1
globalMupixID2 = $half_ladder_id*3 + 2

# Initialize errors as big as possible
norm0 = 100000000000.0
norm1 = 100000000000.0
norm2 = 100000000000.0

error0 = 0
error0_final = 0

out0 = 0
out1 = 0
out2 = 0


# TODO do linkquality check at feb level

# Loop over all possible magic values
index_j = 0
LOOP j, ($stop_magic_value-$start_magic_value)+1
    # Magic values to test
    vpvco = $j -1 + $start_magic_value
    vnvco = $vpvco + 1

    LOOP i, 3
        _i = $half_ladder_id*3 + $i - 1
        ODBSET /Equipment/PixelsCentral/Settings/BIASDACS/$_i/VPVCO, $vpvco
        ODBSET /Equipment/PixelsCentral/Settings/BIASDACS/$_i/VNVCO, $vnvco
        ODBSET /Equipment/PixelsCentral/Settings/BIASDACS/$_i/BiasBlock_On, 5
    ENDLOOP
     
    # Upload config
    ODBSET /Equipment/SwitchingCentral/Commands/MupixChipToConfigure, 999
    ODBSET /Equipment/SwitchingCentral/Commands/MupixConfig, 1
    # TODO check waiting time
    WAIT 30 

    # Get errors
        ODBGET $chip0_linkA, error0
        ODBGET $chip0_linkB, error1
        ODBGET $chip0_linkC, error2

        ODBGET $chip1_linkA, error3
        ODBGET $chip1_linkB, error4
        ODBGET $chip1_linkC, error5

        ODBGET $chip2_linkA, error6
        ODBGET $chip2_linkB, error7
        ODBGET $chip2_linkC, error8

    WAIT SECONDS, $waiting_time

    # Get errors again
        ODBGET $chip0_linkA, error0_final
        ODBGET $chip0_linkB, error1_final
        ODBGET $chip0_linkC, error2_final

        ODBGET $chip1_linkA, error3_final
        ODBGET $chip1_linkB, error4_final
        ODBGET $chip1_linkC, error5_final

        ODBGET $chip2_linkA, error6_final
        ODBGET $chip2_linkB, error7_final
        ODBGET $chip2_linkC, error8_final

    # Get differences
        diff0 = ($error0_final - $error0)/$waiting_time
        diff1 = ($error1_final - $error1)/$waiting_time
        diff2 = ($error2_final - $error2)/$waiting_time

        diff3 = ($error3_final - $error3)/$waiting_time
        diff4 = ($error4_final - $error4)/$waiting_time
        diff5 = ($error5_final - $error5)/$waiting_time

        diff6 = ($error6_final - $error6)/$waiting_time
        diff7 = ($error7_final - $error7)/$waiting_time
        diff8 = ($error8_final - $error8)/$waiting_time

        candidate_norm0 = sqrt($diff0*$diff0 + $diff1*$diff1 + $diff2*$diff2)
        candidate_norm1 = sqrt($diff3*$diff3 + $diff4*$diff4 + $diff5*$diff5)
        candidate_norm2 = sqrt($diff6*$diff6 + $diff7*$diff7 + $diff8*$diff8)

        # Save in ODB
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/0/Scan/VPVCO[$index_j], $vpvco
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/0/Scan/error_rate[$index_j], $candidate_norm0
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/0/Scan/error_rate_linkA[$index_j], $diff0
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/0/Scan/error_rate_linkB[$index_j], $diff1
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/0/Scan/error_rate_linkC[$index_j], $diff2

        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/1/Scan/VPVCO[$index_j], $vpvco
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/1/Scan/error_rate[$index_j], $candidate_norm1
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/1/Scan/error_rate_linkA[$index_j], $diff3
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/1/Scan/error_rate_linkB[$index_j], $diff4
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/1/Scan/error_rate_linkC[$index_j], $diff5

        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/2/Scan/VPVCO[$index_j], $vpvco
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/2/Scan/error_rate[$index_j], $candidate_norm2        
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/2/Scan/error_rate_linkA[$index_j], $diff6
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/2/Scan/error_rate_linkB[$index_j], $diff7
        ODBSET  /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/2/Scan/error_rate_linkC[$index_j], $diff8


    IF $candidate_norm0 < $norm0
        norm0 = $candidate_norm1
        out0 = $vpvco
    ENDIF

    IF $candidate_norm1 < $norm1
        norm1 = $candidate_norm1
        out1 = $vpvco
    ENDIF

    IF $candidate_norm2 < $norm2 
        norm2 = $candidate_norm2
        out2 = $vpvco
    ENDIF
    index_j = $j
ENDLOOP


# Save error rate and and optimal params from mupixID0, mupixID1, mupixID2.
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/0/opt_VPVCO, $out0
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/0/opt_VNVCO, $out0 + 1
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/0/ErrorRate, $norm0

ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/1/opt_VPVCO, $out1
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/1/opt_VNVCO, $out1 + 1
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/1/ErrorRate, $norm1

ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/2/opt_VPVCO, $out2
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/2/opt_VNVCO, $out2 +1 
ODBSET /Equipment/PixelsCentral/QCTests/Ladder/LINKQUALIcheck/Output/2/ErrorRate, $norm2



ODBSET /Equipment/PixelsCentral/Settings/BIASDACS/$globalMupixID0/VPVCO, $out0
ODBSET /Equipment/PixelsCentral/Settings/BIASDACS/$globalMupixID0/VNVCO, $out0+1

ODBSET /Equipment/PixelsCentral/Settings/BIASDACS/$globalMupixID1/VPVCO, $out1
ODBSET /Equipment/PixelsCentral/Settings/BIASDACS/$globalMupixID1/VNVCO, $out1+1

ODBSET /Equipment/PixelsCentral/Settings/BIASDACS/$globalMupixID2/VPVCO, $out2
ODBSET /Equipment/PixelsCentral/Settings/BIASDACS/$globalMupixID2/VNVCO, $out2+1

ODBSET /Equipment/SwitchingCentral/Commands/MupixChipToConfigure, 999
ODBSET /Equipment/SwitchingCentral/Commands/MupixConfig, 1
# TODO Check waiting time
WAIT 30

# Turn off HV
ODBSET /Equipment/KEITHLEY0/Variables/Demand Voltage, 0
WAIT 3
ODBSET /Equipment/KEITHLEY0/Variables/Set State, 0

