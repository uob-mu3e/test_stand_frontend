# Author J. Guzman-Funck, March 2022, Cosmic Run. jose.guzman-funck19@imperial.ac.uk || pepe.guzmanfunck@gmail.com
#
# Script to perform the Link Quality test
#
#
# TODO.
# Check upstream / downstream behaviour
# Add checks for input parameters.
#

# Process input parameters
PARAM hv_voltage, "HV voltage"
PARAM hv_curr_limit, "HV current limit"
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Input/HV_voltage, $hv_voltage
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Input/HV_curr_limit, $hv_curr_limit

# Definitions
start_magic_value = 7
stop_magic_value = 29

waiting_time = 3

# Save parameters to ODB
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Input/start_magic_value_VPVCO, $start_magic_value
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Input/stop_magic_value_VPVCO, $stop_magic_value
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Input/waiting_time, $waiting_time

# Power settings?
# - LV: on
ODBGET /Equipment/HAMEG0/Variables/State[1], now_state_hameg_channel
IF $now_state_hameg_channel == 0
    ODBSET /Equipment/HAMEG0/Variables/Set State[1], 1
    WAIT SECONDS, 10
ENDIF

# - HV: specify at the begnning as params
ODBSET /Equipment/KEITHLEY0/Variables/Current Limit, $hv_curr_limit
ODBSET /Equipment/KEITHLEY0/Variables/Demand Voltage, $hv_voltage
ODBSET /Equipment/KEITHLEY0/Variables/Set State, 1
WAIT SECONDS, 2

# ID of each mupix
mupixID0 = 0
mupixID1 = 1
mupixID2 = 2


# Initialize errors as big as possible
norm0 = 1000000000
norm1 = 1000000000
norm2 = 1000000000

# Loop over all possible magic values
LOOP j, ($stop_magic_value-$start_magic_value)+1
    # Magic values to test
    vpvco = $j-1+$start_magic_value
    vnvco = $vpvco + 1


    # Configure chip
    LOOP i, 3
        mupixID = $i-1 # Implement UPSTREAM or DOWNSTREAM

        ODBSET /Equipment/Mupix/Settings/BIASDACS/$mupixID/opt_VPVCO, $vpvco
        ODBSET /Equipment/Mupix/Settings/BIASDACS/$mupixID/opt_VNVCO, $vnvco
        ODBSET /Equipment/Mupix/Settings/BIASDACS/$mupixID/BiasBlock_On, 5

        # Upload config
        ODBSET /Equipment/Switching/Settings/MupixChipToConfigure, $mupixID
        ODBSET /Equipment/Switching/Settings/MupixConfig, 1
        WAIT 2 SECONDS
    ENDLOOP


    # Get errors
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID0 + 1], error0
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID0 + 5], error1
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID0 + 9], error2

        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID1 + 1], error3
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID1 + 5], error4
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID1 + 9], error5

        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID2 + 1], error6
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID2 + 5], error7
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID2 + 9], error8

    WAIT SECONDS, $waiting_time

    # Get errors again
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID0 + 1], error0_final
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID0 + 5], error1_final
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID0 + 9], error2_final

        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID1 + 1], error3_final
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID1 + 5], error4_final
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID1 + 9], error5_final

        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID2 + 1], error6_final
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID2 + 5], error7_final
        ODBGET Equipment/Mupix/Variables/PSLL[12*$mupixID2 + 9], error8_final

    # Get differences
        diff0 = (error0_final - error0)/$waiting_time
        diff1 = (error1_final - error1)/$waiting_time
        diff2 = (error2_final - error2)/$waiting_time

        diff3 = (error3_final - error3)/$waiting_time
        diff4 = (error4_final - error4)/$waiting_time
        diff5 = (error5_final - error5)/$waiting_time

        diff6 = (error6_final - error6)/$waiting_time
        diff7 = (error7_final - error7)/$waiting_time
        diff8 = (error8_final - error8)/$waiting_time

        candidate_norm0 = sqrt(diff0*diff0 + diff1*diff1 + diff2*diff2)
        candidate_norm1 = sqrt(diff3*diff3+ diff4*diff4 + diff5*diff5)
        candidate_norm2 = sqrt(diff6*diff6+ diff7*diff7 + diff8*diff8)

        # Save in ODB
        ODBSET  /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID0/Scan/VPVCO[$j-1], $vpvco
        ODBSET  /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID0/Scan/error_rate[$j-1], $candidate_norm0
        ODBSET  /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID1/Scan/VPVCO[$j-1], $vpvco
        ODBSET  /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID1/Scan/error_rate[$j-1], $candidate_norm1
        ODBSET  /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID2/Scan/VPVCO[$j-1], $vpvco
        ODBSET  /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID2/Scan/error_rate[$j-1], $candidate_norm2        


    IF candidate_norm0 < norm0
        norm0 = candidate_norm1
        out0 = $vpvco
    ENDIF

    IF candidate_norm1 < norm1
        norm1 = candidate_norm1
        out1 = $vpvco
    ENDIF

    IF candidate_norm2 < norm2 
        norm2 = candidate_norm2
        out2 = $vpvco
    ENDIF
ENDLOOP


# Save error rate and and optimal params from mupixID0, mupixID1, mupixID2.
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID0/VPVCO, $out0
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID0/VNVCO, $out0 + 1
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID0/ErrorRate, $norm0

ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID1/VPVCO, $out1
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID1/VNVCO, $out1 + 1
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID1/ErrorRate, $norm1

ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID2/VPVCO, $out2
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID2/VNVCO, $out2 +1 
ODBSET /Equipment/Mupix/QCTests/Ladder/LINKQUALIcheck/Output/$mupixID2/ErrorRate, $norm2

# Set chips to that values and configure all
ODBSET /Equipment/Mupix/Settings/BIASDACS/$mupixID0/VPVCO, $out0
ODBSET /Equipment/Mupix/Settings/BIASDACS/$mupixID0/VNVCO, $out0+1
ODBSET /Equipment/Switching/Variables/MupixChipToConfigure, $mupixID0
ODBSET /Equipment/Switching/Variables/MupixConfig, 1
WAIT SECONDS, 1

ODBSET /Equipment/Mupix/Settings/BIASDACS/$mupixID1/VPVCO, $out1
ODBSET /Equipment/Mupix/Settings/BIASDACS/$mupixID1/VNVCO, $out1+1
ODBSET /Equipment/Switching/Variables/MupixChipToConfigure, $mupixID1
ODBSET /Equipment/Switching/Variables/MupixConfig, 1
WAIT SECONDS, 1

ODBSET /Equipment/Mupix/Settings/BIASDACS/$mupixID2/VPVCO, $out2
ODBSET /Equipment/Mupix/Settings/BIASDACS/$mupixID2/VNVCO, $out2+1
ODBSET /Equipment/Switching/Variables/MupixChipToConfigure, $mupixID2
ODBSET /Equipment/Switching/Variables/MupixConfig, 1
WAIT SECONDS, 2



