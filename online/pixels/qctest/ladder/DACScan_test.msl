# Author J. Guzman-Funck, March 2022, Cosmic Run. jose.guzman-funck19@imperial.ac.uk || pepe.guzmanfunck@gmail.com
#
# DACScan test
#
# TODO
# - Make it more flexible to be integrated in more flexible scanning interface
#


# Get values
# Configure power
# To each mupix:
# Turn on
# Loop over each value and each dac
# Record current


# TODO. Check
end = 206



# Empty output buffers at startup

chip = 0

LOOP i, 3
    CAT buffer_vpdac_path, /Equipment/Mupix/QCTests/Ladder/DACScan/Output/VPDAC/, $chip
    CAT buffer_refVss_path, /Equipment/Mupix/QCTests/Ladder/DACScan/Output/ref_Vss/, $chip
    
    # TODO test
    LOOP j, 10
        ODBSET $buffer_vpdac_path/VPDAC_values[$j-1], 0
        ODBSET $buffer_refVss_path/VPDAC_current[$j-1], 0
        
    ENDLOOP 

    LOOP j, 32
        ODBSET $buffer_vpdac_path/ref_Vss_values[$j-1], 0
        ODBSET $buffer_refVss_path/ref_Vss_current[$j-1], 0
    ENDLOOP
    chip = $i
ENDLOOP



# Process input parameters
PARAM half_ladder_id, "Half ladder ID"
PARAM hameg_id, "HAMEG ID"
PARAM channel, "HAMEG Channel"


ODBGET /Equipment/Mupix/QCTests/Ladder/half_ladder_id, _g_half_ladder_id
IF $_g_half_ladder_id != half_ladder_id
    MESSAGE "Input half_ladder_id at DAC Scan Test different than the one inputed previously", 0
ENDIF

ODBGET /Equipment/Mupix/QCTests/Ladder/half_ladder_id, _g_hameg_id
IF $_g_hameg_id != hameg_id
    MESSAGE "Input hameg_id at DAC Scan Test different than the one inputed previously", 0
ENDIF

ODBGET /Equipment/Mupix/QCTests/Ladder/half_ladder_id, _g_channel
IF $_g_channel != channel
    MESSAGE "Input channel at DAC Scan Test different than the one inputed previously", 0
ENDIF


ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/half_ladder_id, $half_ladder_id
ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/hameg_id, $hameg_id
ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/channel, $channel


CAT power_get_state_path, /Equipment/HAMEG, $hameg_id, /Variables/State[, $channel,]
CAT power_set_state_path, /Equipment/HAMEG, $hameg_id, /Variables/Set State[, $channel,]
CAT power_get_current_path, /Equipment/HAMEG, $hameg_id, /Variables/Current[, $channel,]


PARAM hv_voltage, "HV voltage"
PARAM hv_curr_limit, "HV current limit"
ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/Input/HV_voltage, $hv_voltage
ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/Input/HV_curr_limit, $hv_curr_limit

PARAM vpdac_start, "VPDAC start"
PARAM vpdac_step, "VPDAC step"
PARAM vpdac_stop, "VPDAC stop"

num_VPDAC_steps = (($vpdac_stop-$vpdac_start) / $vpdac_step) + 1 


ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/Input/VPDAC/start_value, $vpdac_start 
ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/Input/VPDAC/step, $vpdac_step
ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/Input/VPDAC/stop_value, $vpdac_stop


PARAM ref_Vss_start, "ref_Vss start"
PARAM ref_Vss_step, "ref_Vss step"
PARAM ref_Vss_stop, "ref_Vss stop"


num_ref_Vss_steps = (($ref_Vss_stop-$ref_Vss_start) / $ref_Vss_step) + 1 


ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/Input/ref_Vss/start_value, $ref_Vss_start 
ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/Input/ref_Vss/step, $ref_Vss_step
ODBSET /Equipment/Mupix/QCTests/Ladder/DACScan/Input/ref_Vss/stop_value, $ref_Vss_stop



# Check if buffers are big enough. VPDAC buffer size: 10. ref_Vss buffer size: 32
IF $num_VPDAC_steps > 10
    MESSAGE "VPDAC buffer too small for run. Increase buffer size or increase steps", 1
    GOTO $end
ENDIF

IF $num_ref_Vss_steps > 32
    MESSAGE "ref_Vss buffer too small for run. Increase buffer size or increase steps", 1
    GOTO $end
ENDIF



# Configure power

# LV. Hameg. Check if channel 2 is off and if it is turn on
ODBGET $power_get_state_path, now_state_hameg_channel

IF $now_state_hameg_channel == 0
    ODBSET $power_set_state_path, 1
    WAIT 10
ENDIF

# HV. Keithley
ODBSET /Equipment/KEITHLEY0/Variables/Current Limit, $hv_curr_limit
ODBSET /Equipment/KEITHLEY0/Variables/Demand Voltage, -1*abs($hv_voltage)
ODBSET /Equipment/KEITHLEY0/Variables/Set State, 1


# To each chip
LOOP i, 3
    # Turn on chip i. This is downstream
    i_ = $i-1

    CAT path_to_bias, /Equipment/Mupix/Settings/BIASDACS/, $i_, /BiasBlock_On
    CAT path_to_vpdac, /Equipment/Mupix/Settings/BIASDACS/, $i_, /VPDAC
    CAT path_to_ref_Vss, /Equipment/Mupix/Settings/VDACS/, $i_, /ref_Vss
    CAT path_to_vpdac_output, /Equipment/Mupix/QCTests/Ladder/DACScan/Output/VPDAC/, $i_
    CAT path_to_ref_Vss_output, /Equipment/Mupix/QCTests/Ladder/DACScan/Output/ref_Vss/, $i_

    ODBGET $path_to_vpdac, default_vpdac_value
    ODBGET $path_to_ref_Vss, default_ref_vss_value

    # Turn on mupix i
    ODBSET $path_to_bias, 5

    # Loop over VPDAC values. Values gotten from PARAM
    LOOP j, $num_VPDAC_steps

        ODBSET $path_to_vpdac, ($j-1)*$vpdac_step + $vpdac_start
        ODBSET /Equipment/Switching/Settings/MupixChipToConfigure, $i_
        ODBSET /Equipment/Switching/Settings/MupixConfig, 1

        WAIT 3

        ODBGET $power_get_current_path, current
        CAT path_to_vpdac_output_value, /Equipment/Mupix/QCTests/Ladder/DACScan/Output/VPDAC/, $i_, /VPDAC_values[$j-1]
        ODBSET $path_to_vpdac_output_value, ($j-1)*$vpdac_step + $vpdac_start
        CAT path_to_vpdac_output_current, /Equipment/Mupix/QCTests/Ladder/DACScan/Output/VPDAC/, $i_, /VPDAC_current[$j-1]
        ODBSET $path_to_vpdac_output_current, $current

    ENDLOOP

    WAIT 1
    # Set VPDAC back to the starting value
    ODBSET $path_to_vpdac, $default_vpdac_value

    # Loop over ref_Vss values. Values gotten from PARAM
    index_k = 0
    LOOP k, $num_ref_Vss_steps
        ODBSET $path_to_ref_Vss, ($k-1)*$ref_Vss_step + $ref_Vss_start
        ODBSET /Equipment/Switching/Settings/MupixConfig, 1

        WAIT 3

        ODBGET $power_get_current_path, current
        CAT path_to_ref_Vss_output_value, /Equipment/Mupix/QCTests/Ladder/DACScan/Output/ref_Vss/, $i_, /ref_Vss_values[$index_k]
        ODBSET $path_to_ref_Vss_output_value, ($k-1)*$ref_Vss_step + $ref_Vss_start

        CAT path_to_ref_Vss_output_current, /Equipment/Mupix/QCTests/Ladder/DACScan/Output/ref_Vss/, $i_, /ref_Vss_current[$index_k]
        ODBSET $path_to_ref_Vss_output_current, $current

        index_k = $k
    ENDLOOP

    ODBSET $path_to_ref_Vss, $default_ref_vss_value
    ODBSET $path_to_bias, 0
    ODBSET /Equipment/Mupix/Settings/BIASDACS/*/BiasBlock_On, 0
    ODBSET /Equipment/Switching/Settings/MupixChipToConfigure, $i_  
    ODBSET /Equipment/Switching/Settings/MupixConfig, 1

    WAIT SECONDS, 3
ENDLOOP


# Turn off HV
ODBSET /Equipment/KEITHLEY0/Variables/Set State, 0