/************************************************
* Register map header file 
* Automatically generated from ../../switching_pc/a10_board/firmware/mudaq_registers.vhd
* On 2019-12-11T10:32:50.665392
************************************************/

#ifndef MUDAQ_REGISTERS__H 
#define MUDAQ_REGISTERS__H 


#define LED_REGISTER_W		0x00
#define RESET_REGISTER_W		0x01
#define RESET_BIT_ALL		0
#define GET_RESET_BIT_ALL(REG) ((REG>>0)& 0x1) 
#define SET_RESET_BIT_ALL(REG) ((1<<0)| REG) 
#define UNSET_RESET_BIT_ALL(REG) ((~(1<<0)) & REG) 
#define RESET_BIT_DATAGEN		1
#define GET_RESET_BIT_DATAGEN(REG) ((REG>>1)& 0x1) 
#define SET_RESET_BIT_DATAGEN(REG) ((1<<1)| REG) 
#define UNSET_RESET_BIT_DATAGEN(REG) ((~(1<<1)) & REG) 
#define RESET_BIT_BOARD		2
#define GET_RESET_BIT_BOARD(REG) ((REG>>2)& 0x1) 
#define SET_RESET_BIT_BOARD(REG) ((1<<2)| REG) 
#define UNSET_RESET_BIT_BOARD(REG) ((~(1<<2)) & REG) 
#define RESET_BIT_WORDALIGN		3
#define GET_RESET_BIT_WORDALIGN(REG) ((REG>>3)& 0x1) 
#define SET_RESET_BIT_WORDALIGN(REG) ((1<<3)| REG) 
#define UNSET_RESET_BIT_WORDALIGN(REG) ((~(1<<3)) & REG) 
#define RESET_BIT_RECEIVER		4
#define GET_RESET_BIT_RECEIVER(REG) ((REG>>4)& 0x1) 
#define SET_RESET_BIT_RECEIVER(REG) ((1<<4)| REG) 
#define UNSET_RESET_BIT_RECEIVER(REG) ((~(1<<4)) & REG) 
#define RESET_BIT_DATAFIFO		5
#define GET_RESET_BIT_DATAFIFO(REG) ((REG>>5)& 0x1) 
#define SET_RESET_BIT_DATAFIFO(REG) ((1<<5)| REG) 
#define UNSET_RESET_BIT_DATAFIFO(REG) ((~(1<<5)) & REG) 
#define RESET_BIT_FIFOPLL		6
#define GET_RESET_BIT_FIFOPLL(REG) ((REG>>6)& 0x1) 
#define SET_RESET_BIT_FIFOPLL(REG) ((1<<6)| REG) 
#define UNSET_RESET_BIT_FIFOPLL(REG) ((~(1<<6)) & REG) 
#define RESET_BIT_SC_SLAVE		7
#define GET_RESET_BIT_SC_SLAVE(REG) ((REG>>7)& 0x1) 
#define SET_RESET_BIT_SC_SLAVE(REG) ((1<<7)| REG) 
#define UNSET_RESET_BIT_SC_SLAVE(REG) ((~(1<<7)) & REG) 
#define RESET_BIT_SC_MASTER		8
#define GET_RESET_BIT_SC_MASTER(REG) ((REG>>8)& 0x1) 
#define SET_RESET_BIT_SC_MASTER(REG) ((1<<8)| REG) 
#define UNSET_RESET_BIT_SC_MASTER(REG) ((~(1<<8)) & REG) 
#define RESET_BIT_PCIE_LOCAL		9
#define GET_RESET_BIT_PCIE_LOCAL(REG) ((REG>>9)& 0x1) 
#define SET_RESET_BIT_PCIE_LOCAL(REG) ((1<<9)| REG) 
#define UNSET_RESET_BIT_PCIE_LOCAL(REG) ((~(1<<9)) & REG) 
#define RESET_BIT_TOP_PROC		10
#define GET_RESET_BIT_TOP_PROC(REG) ((REG>>10)& 0x1) 
#define SET_RESET_BIT_TOP_PROC(REG) ((1<<10)| REG) 
#define UNSET_RESET_BIT_TOP_PROC(REG) ((~(1<<10)) & REG) 
#define RESET_BIT_PCIE_APPL		12
#define GET_RESET_BIT_PCIE_APPL(REG) ((REG>>12)& 0x1) 
#define SET_RESET_BIT_PCIE_APPL(REG) ((1<<12)| REG) 
#define UNSET_RESET_BIT_PCIE_APPL(REG) ((~(1<<12)) & REG) 
#define RESET_BIT_EVENT_COUNTER		13
#define GET_RESET_BIT_EVENT_COUNTER(REG) ((REG>>13)& 0x1) 
#define SET_RESET_BIT_EVENT_COUNTER(REG) ((1<<13)| REG) 
#define UNSET_RESET_BIT_EVENT_COUNTER(REG) ((~(1<<13)) & REG) 
#define RESET_BIT_DMA_EVAL		14
#define GET_RESET_BIT_DMA_EVAL(REG) ((REG>>14)& 0x1) 
#define SET_RESET_BIT_DMA_EVAL(REG) ((1<<14)| REG) 
#define UNSET_RESET_BIT_DMA_EVAL(REG) ((~(1<<14)) & REG) 
#define RESET_BIT_LINK_TEST		15
#define GET_RESET_BIT_LINK_TEST(REG) ((REG>>15)& 0x1) 
#define SET_RESET_BIT_LINK_TEST(REG) ((1<<15)| REG) 
#define UNSET_RESET_BIT_LINK_TEST(REG) ((~(1<<15)) & REG) 
#define RESET_BIT_RUN_START_ACK		16
#define GET_RESET_BIT_RUN_START_ACK(REG) ((REG>>16)& 0x1) 
#define SET_RESET_BIT_RUN_START_ACK(REG) ((1<<16)| REG) 
#define UNSET_RESET_BIT_RUN_START_ACK(REG) ((~(1<<16)) & REG) 
#define RESET_BIT_RUN_END_ACK		17
#define GET_RESET_BIT_RUN_END_ACK(REG) ((REG>>17)& 0x1) 
#define SET_RESET_BIT_RUN_END_ACK(REG) ((1<<17)| REG) 
#define UNSET_RESET_BIT_RUN_END_ACK(REG) ((~(1<<17)) & REG) 
#define RESET_BIT_PCIE		31
#define GET_RESET_BIT_PCIE(REG) ((REG>>31)& 0x1) 
#define SET_RESET_BIT_PCIE(REG) ((1<<31)| REG) 
#define UNSET_RESET_BIT_PCIE(REG) ((~(1<<31)) & REG) 
#define DATAGENERATOR_REGISTER_W		0x02
#define DATAGENERATOR_BIT_ENABLE		0
#define GET_DATAGENERATOR_BIT_ENABLE(REG) ((REG>>0)& 0x1) 
#define SET_DATAGENERATOR_BIT_ENABLE(REG) ((1<<0)| REG) 
#define UNSET_DATAGENERATOR_BIT_ENABLE(REG) ((~(1<<0)) & REG) 
#define DATAGENERATOR_BIT_ENABLE_PIXEL		1
#define GET_DATAGENERATOR_BIT_ENABLE_PIXEL(REG) ((REG>>1)& 0x1) 
#define SET_DATAGENERATOR_BIT_ENABLE_PIXEL(REG) ((1<<1)| REG) 
#define UNSET_DATAGENERATOR_BIT_ENABLE_PIXEL(REG) ((~(1<<1)) & REG) 
#define DATAGENERATOR_BIT_ENABLE_FIBRE		2
#define GET_DATAGENERATOR_BIT_ENABLE_FIBRE(REG) ((REG>>2)& 0x1) 
#define SET_DATAGENERATOR_BIT_ENABLE_FIBRE(REG) ((1<<2)| REG) 
#define UNSET_DATAGENERATOR_BIT_ENABLE_FIBRE(REG) ((~(1<<2)) & REG) 
#define DATAGENERATOR_BIT_ENABLE_TILE		3
#define GET_DATAGENERATOR_BIT_ENABLE_TILE(REG) ((REG>>3)& 0x1) 
#define SET_DATAGENERATOR_BIT_ENABLE_TILE(REG) ((1<<3)| REG) 
#define UNSET_DATAGENERATOR_BIT_ENABLE_TILE(REG) ((~(1<<3)) & REG) 
#define DATAGENERATOR_BIT_ENABLE_TEST		4
#define GET_DATAGENERATOR_BIT_ENABLE_TEST(REG) ((REG>>4)& 0x1) 
#define SET_DATAGENERATOR_BIT_ENABLE_TEST(REG) ((1<<4)| REG) 
#define UNSET_DATAGENERATOR_BIT_ENABLE_TEST(REG) ((~(1<<4)) & REG) 
#define DATAGENERATOR_BIT_DMA_HALFFUL_MODE		5
#define GET_DATAGENERATOR_BIT_DMA_HALFFUL_MODE(REG) ((REG>>5)& 0x1) 
#define SET_DATAGENERATOR_BIT_DMA_HALFFUL_MODE(REG) ((1<<5)| REG) 
#define UNSET_DATAGENERATOR_BIT_DMA_HALFFUL_MODE(REG) ((~(1<<5)) & REG) 
#define DATAGENERATOR_FRACCOUNT_RANGE_HI		15
#define DATAGENERATOR_FRACCOUNT_RANGE_LOW		8
#define GET_DATAGENERATOR_FRACCOUNT_RANGE(REG) ((REG>>8)&0xff) 
#define SET_DATAGENERATOR_FRACCOUNT_RANGE(REG, VAL) ((REG & (~(0xff<< 8))) | ((VAL & 0xff)<< 8))  
#define DATAGENERATOR_NPIXEL_RANGE_HI		15
#define DATAGENERATOR_NPIXEL_RANGE_LOW		8
#define GET_DATAGENERATOR_NPIXEL_RANGE(REG) ((REG>>8)&0xff) 
#define SET_DATAGENERATOR_NPIXEL_RANGE(REG, VAL) ((REG & (~(0xff<< 8))) | ((VAL & 0xff)<< 8))  
#define DATAGENERATOR_NFIBRE_RANGE_HI		23
#define DATAGENERATOR_NFIBRE_RANGE_LOW		16
#define GET_DATAGENERATOR_NFIBRE_RANGE(REG) ((REG>>16)&0xff) 
#define SET_DATAGENERATOR_NFIBRE_RANGE(REG, VAL) ((REG & (~(0xff<< 16))) | ((VAL & 0xff)<< 16))  
#define DATAGENERATOR_NTILE_RANGE_HI		31
#define DATAGENERATOR_NTILE_RANGE_LOW		24
#define GET_DATAGENERATOR_NTILE_RANGE(REG) ((REG>>24)&0xff) 
#define SET_DATAGENERATOR_NTILE_RANGE(REG, VAL) ((REG & (~(0xff<< 24))) | ((VAL & 0xff)<< 24))  
#define DATAGENERATOR_DIVIDER_REGISTER_W		0x03
#define DMA_CONTROL_COUNTER_RANGE_HI		15
#define DMA_CONTROL_COUNTER_RANGE_LOW		0
#define GET_DMA_CONTROL_COUNTER_RANGE(REG) ((REG>>0)&0xffff) 
#define SET_DMA_CONTROL_COUNTER_RANGE(REG, VAL) ((REG & (~(0xffff<< 0))) | ((VAL & 0xffff)<< 0))  
#define DMA_SLOW_DOWN_REGISTER_W		0x06
#define LINK_TEST_REGISTER_W		0x07
#define LINK_TEST_BIT_ENABLE		0
#define GET_LINK_TEST_BIT_ENABLE(REG) ((REG>>0)& 0x1) 
#define SET_LINK_TEST_BIT_ENABLE(REG) ((1<<0)| REG) 
#define UNSET_LINK_TEST_BIT_ENABLE(REG) ((~(1<<0)) & REG) 
#define RUN_NR_REGISTER_W		0x08
#define RUN_NR_ADDR_REGISTER_W		0x09
#define FEB_ENABLE_REGISTER_W		0x0a
#define DMA2_CTRL_ADDR_LOW_REGISTER_W		0x36
#define DMA2_CTRL_ADDR_HI_REGISTER_W		0x37
#define DMA_REGISTER_W		0x38
#define DMA_BIT_ENABLE		0
#define GET_DMA_BIT_ENABLE(REG) ((REG>>0)& 0x1) 
#define SET_DMA_BIT_ENABLE(REG) ((1<<0)| REG) 
#define UNSET_DMA_BIT_ENABLE(REG) ((~(1<<0)) & REG) 
#define DMA_BIT_NOW		1
#define GET_DMA_BIT_NOW(REG) ((REG>>1)& 0x1) 
#define SET_DMA_BIT_NOW(REG) ((1<<1)| REG) 
#define UNSET_DMA_BIT_NOW(REG) ((~(1<<1)) & REG) 
#define DMA_BIT_ADDR_WRITE_ENABLE		2
#define GET_DMA_BIT_ADDR_WRITE_ENABLE(REG) ((REG>>2)& 0x1) 
#define SET_DMA_BIT_ADDR_WRITE_ENABLE(REG) ((1<<2)| REG) 
#define UNSET_DMA_BIT_ADDR_WRITE_ENABLE(REG) ((~(1<<2)) & REG) 
#define DMA_BIT_ENABLE_INTERRUPTS		3
#define GET_DMA_BIT_ENABLE_INTERRUPTS(REG) ((REG>>3)& 0x1) 
#define SET_DMA_BIT_ENABLE_INTERRUPTS(REG) ((1<<3)| REG) 
#define UNSET_DMA_BIT_ENABLE_INTERRUPTS(REG) ((~(1<<3)) & REG) 
#define DMA2_BIT_ENABLE		16
#define GET_DMA2_BIT_ENABLE(REG) ((REG>>16)& 0x1) 
#define SET_DMA2_BIT_ENABLE(REG) ((1<<16)| REG) 
#define UNSET_DMA2_BIT_ENABLE(REG) ((~(1<<16)) & REG) 
#define DMA2_BIT_NOW		17
#define GET_DMA2_BIT_NOW(REG) ((REG>>17)& 0x1) 
#define SET_DMA2_BIT_NOW(REG) ((1<<17)| REG) 
#define UNSET_DMA2_BIT_NOW(REG) ((~(1<<17)) & REG) 
#define DMA2_BIT_ADDR_WRITE_ENABLE		18
#define GET_DMA2_BIT_ADDR_WRITE_ENABLE(REG) ((REG>>18)& 0x1) 
#define SET_DMA2_BIT_ADDR_WRITE_ENABLE(REG) ((1<<18)| REG) 
#define UNSET_DMA2_BIT_ADDR_WRITE_ENABLE(REG) ((~(1<<18)) & REG) 
#define DMA2_BIT_ENABLE_INTERRUPTS		19
#define GET_DMA2_BIT_ENABLE_INTERRUPTS(REG) ((REG>>19)& 0x1) 
#define SET_DMA2_BIT_ENABLE_INTERRUPTS(REG) ((1<<19)| REG) 
#define UNSET_DMA2_BIT_ENABLE_INTERRUPTS(REG) ((~(1<<19)) & REG) 
#define DMA_CTRL_ADDR_LOW_REGISTER_W		0x39
#define DMA_CTRL_ADDR_HI_REGISTER_W		0x3a
#define DMA_DATA_ADDR_LOW_REGISTER_W		0x3b
#define DMA_DATA_ADDR_HI_REGISTER_W		0x3c
#define DMA_RAM_LOCATION_NUM_PAGES_REGISTER_W		0x3d
#define DMA_RAM_LOCATION_RANGE_HI		31
#define DMA_RAM_LOCATION_RANGE_LOW		20
#define GET_DMA_RAM_LOCATION_RANGE(REG) ((REG>>20)&0xfff) 
#define SET_DMA_RAM_LOCATION_RANGE(REG, VAL) ((REG & (~(0xfff<< 20))) | ((VAL & 0xfff)<< 20))  
#define DMA_NUM_PAGES_RANGE_HI		19
#define DMA_NUM_PAGES_RANGE_LOW		0
#define GET_DMA_NUM_PAGES_RANGE(REG) ((REG>>0)&0xfffff) 
#define SET_DMA_NUM_PAGES_RANGE(REG, VAL) ((REG & (~(0xfffff<< 0))) | ((VAL & 0xfffff)<< 0))  
#define DMA_NUM_ADDRESSES_REGISTER_W		0x3e
#define DMA_NUM_ADDRESSES_RANGE_HI		11
#define DMA_NUM_ADDRESSES_RANGE_LOW		0
#define GET_DMA_NUM_ADDRESSES_RANGE(REG) ((REG>>0)&0xfff) 
#define SET_DMA_NUM_ADDRESSES_RANGE(REG, VAL) ((REG & (~(0xfff<< 0))) | ((VAL & 0xfff)<< 0))  
#define DMA2_NUM_ADDRESSES_RANGE_HI		27
#define DMA2_NUM_ADDRESSES_RANGE_LOW		16
#define GET_DMA2_NUM_ADDRESSES_RANGE(REG) ((REG>>16)&0xfff) 
#define SET_DMA2_NUM_ADDRESSES_RANGE(REG, VAL) ((REG & (~(0xfff<< 16))) | ((VAL & 0xfff)<< 16))  
#define PLL_REGISTER_R		0x00
#define DIPSWITCH_RANGE_HI		1
#define DIPSWITCH_RANGE_LOW		0
#define GET_DIPSWITCH_RANGE(REG) ((REG>>0)&0x3) 
#define SET_DIPSWITCH_RANGE(REG, VAL) ((REG & (~(0x3<< 0))) | ((VAL & 0x3)<< 0))  
#define VERSION_REGISTER_R		0x01
#define VERSION_RANGE_HI		27
#define VERSION_RANGE_LOW		0
#define GET_VERSION_RANGE(REG) ((REG>>0)&0xfffffff) 
#define SET_VERSION_RANGE(REG, VAL) ((REG & (~(0xfffffff<< 0))) | ((VAL & 0xfffffff)<< 0))  
#define EVENTCOUNTER_REGISTER_R		0x02
#define EVENTCOUNTER64_REGISTER_R		0x03
#define TIMECOUNTER_LOW_REGISTER_R		0x04
#define TIMECOUNTER_HIGH_REGISTER_R		0x05
#define MEM_WRITEADDR_LOW_REGISTER_R		0x06
#define MEM_WRITEADDR_HIGH_REGISTER_R		0x07
#define EVENT2COUNTER64_REGISTER_R		0x08
#define DMA_HALFFUL_REGISTER_R		0x14
#define DMA_NOTHALFFUL_REGISTER_R		0x15
#define DMA_ENDEVENT_REGISTER_R		0x16
#define DMA_NOTENDEVENT_REGISTER_R		0x17
#define RUN_NR_ACK_REGISTER_R		0x18
#define RUN_NR_REGISTER_R		0x19
#define RUN_STOP_ACK_REGISTER_R		0x1a
#define DMA_STATUS_REGISTER_R		0x38
#define DMA_DATA_ADDR_LOW_REGISTER_R		0x39
#define DMA_DATA_ADDR_HI_REGISTER_R		0x3a
#define DMA_NUM_PAGES_REGISTER_R		0x3b
#define DMA2_STATUS_REGISTER_R		0x3c
#define DMA2_DATA_ADDR_LOW_REGISTER_R		0x3d
#define DMA2_DATA_ADDR_HI_REGISTER_R		0x3e
#define DMA2_NUM_PAGES_REGISTER_R		0x3f


#endif  //#ifndef MUDAQ_REGISTERS__H 
